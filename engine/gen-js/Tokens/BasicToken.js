// Generated by CoffeeScript 1.4.0
(function() {
  var root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof global !== "undefined" && global !== null ? global : window;

  root.BasicToken = (function(_super) {

    __extends(BasicToken, _super);

    function BasicToken(debug) {
      BasicToken.__super__.constructor.apply(this, arguments);
    }

    BasicToken.prototype.reset = function(state) {
      BasicToken.__super__.reset.apply(this, arguments);
      state.tokens[this.debug.id].status = Inactive;
      return state.tokens[this.debug.id].attempted = false;
    };

    BasicToken.prototype.setupStateObject = function() {
      return {
        status: Inactive,
        attempted: false
      };
    };

    BasicToken.prototype.nextMatch = function(state) {
      var result, tokenState;
      tokenState = state.tokens[this.debug.id];
      if (tokenState.attempted) {
        return Result.Failure();
      }
      tokenState.attempted = true;
      result = this.matches(state);
      switch (result.type) {
        case Success:
          tokenState.status = Matched;
          break;
        case Failure:
          tokenState.status = Failed;
      }
      return result;
    };

    return BasicToken;

  })(Token);

}).call(this);
