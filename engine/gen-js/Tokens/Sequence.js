// Generated by CoffeeScript 1.4.0
(function() {
  var root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof global !== "undefined" && global !== null ? global : window;

  root.Sequence = (function(_super) {

    __extends(Sequence, _super);

    function Sequence(debug) {
      Sequence.__super__.constructor.call(this, debug);
    }

    Sequence.prototype.reset = function(state) {
      Sequence.__super__.reset.apply(this, arguments);
      state.tokens[this.debug.id].i = 0;
      return state.tokens[this.debug.id].pos = [];
    };

    Sequence.prototype.setupStateObject = function() {
      return {
        i: 0,
        pos: []
      };
    };

    Sequence.prototype.nextMatch = function(state) {
      var result, tokenState;
      tokenState = state.tokens[this.debug.id];
      if (tokenState.i === -1) {
        this.reset(state);
        return false;
      }
      if (this.subtokens.length === 0) {
        --tokenState.i;
        return state.currentPosition;
      }
      result = this.subtokens[tokenState.i].nextMatch(state);
      switch (result) {
        case false:
          --tokenState.i;
          if (tokenState.pos.length > 0) {
            state.currentPosition = tokenState.pos.pop();
          }
          return 0;
        case -1:
        case 0:
          return result;
        default:
          if (tokenState.i === this.subtokens.length - 1) {
            return result;
          } else {
            ++tokenState.i;
            tokenState.pos.push(state.currentPosition);
            state.currentPosition = result;
            return -1;
          }
      }
    };

    return Sequence;

  })(root.Token);

}).call(this);
