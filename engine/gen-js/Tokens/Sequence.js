// Generated by CoffeeScript 1.4.0
(function() {
  var root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof global !== "undefined" && global !== null ? global : window;

  root.Sequence = (function(_super) {

    __extends(Sequence, _super);

    function Sequence() {
      Sequence.__super__.constructor.call(this);
    }

    Sequence.prototype.reset = function() {
      Sequence.__super__.reset.call(this);
      this.i = 0;
      return this.pos = [];
    };

    Sequence.prototype.nextMatch = function(state, report) {
      var result;
      if (this.i === -1) {
        this.reset();
        return false;
      }
      if (this.subtokens.length === 0) {
        --this.i;
        return state.currentPosition;
      }
      result = this.subtokens[this.i].nextMatch(state, report);
      switch (result) {
        case false:
          --this.i;
          if (this.pos.length > 0) {
            state.currentPosition = this.pos.pop();
          }
          return 0;
        case -1:
        case 0:
          return result;
        default:
          if (this.i === this.subtokens.length - 1) {
            return result;
          } else {
            ++this.i;
            this.pos.push(state.currentPosition);
            state.currentPosition = result;
            return -1;
          }
      }
    };

    return Sequence;

  })(root.Token);

}).call(this);
