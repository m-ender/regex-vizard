// Generated by CoffeeScript 1.4.0
(function() {
  var root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof global !== "undefined" && global !== null ? global : window;

  root.CharacterRange = (function() {

    function CharacterRange(first, last) {
      this.first = this.sanitize(first);
      this.last = this.sanitize(last);
    }

    CharacterRange.prototype.isInRange = function(char) {
      var _ref;
      return (this.first <= (_ref = this.sanitize(char)) && _ref <= this.last);
    };

    CharacterRange.prototype.sanitize = function(char) {
      if (typeof char === "string") {
        return char.charCodeAt(0);
      } else {
        return char;
      }
    };

    return CharacterRange;

  })();

  root.CharacterClass = (function(_super) {

    __extends(CharacterClass, _super);

    function CharacterClass(debug, negated, elements) {
      this.negated = negated != null ? negated : false;
      this.elements = elements != null ? elements : [];
      CharacterClass.__super__.constructor.call(this, debug);
    }

    CharacterClass.prototype.setupStateObject = function() {
      var obj;
      obj = CharacterClass.__super__.setupStateObject.apply(this, arguments);
      obj.type = 'characterClass';
      return obj;
    };

    CharacterClass.prototype.addElement = function(element) {
      return this.elements.push(element);
    };

    CharacterClass.prototype.addRange = function(first, last) {
      return this.elements.push(new CharacterRange(first, last));
    };

    CharacterClass.prototype.matches = function(state) {
      var char;
      char = state.input[state.currentPosition];
      if (this.isInClass(char)) {
        return Result.Success(state.currentPosition + 1);
      } else {
        return Result.Failure();
      }
    };

    CharacterClass.prototype.isInClass = function(char) {
      var element, _i, _len, _ref;
      if (char === StartGuard || char === EndGuard) {
        return false;
      }
      _ref = this.elements;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        element = _ref[_i];
        if (typeof element === "string" && char === element || element instanceof CharacterClass && element.isInClass(char) || element instanceof CharacterRange && element.isInRange(char)) {
          return !this.negated;
        }
      }
      return this.negated;
    };

    return CharacterClass;

  })(root.BasicToken);

  root.DigitClass = (function(_super) {

    __extends(DigitClass, _super);

    function DigitClass(debug, negated) {
      if (negated == null) {
        negated = false;
      }
      DigitClass.__super__.constructor.call(this, debug, negated, [new CharacterRange("0", "9")]);
    }

    DigitClass.prototype.setupStateObject = function() {
      var obj;
      obj = DigitClass.__super__.setupStateObject.apply(this, arguments);
      obj.subtype = 'digitClass';
      return obj;
    };

    return DigitClass;

  })(root.CharacterClass);

  root.WordClass = (function(_super) {

    __extends(WordClass, _super);

    function WordClass(debug, negated) {
      if (negated == null) {
        negated = false;
      }
      WordClass.__super__.constructor.call(this, debug, negated, [new CharacterRange("A", "Z"), new CharacterRange("a", "z"), new CharacterRange("0", "9"), "_"]);
    }

    WordClass.prototype.setupStateObject = function() {
      var obj;
      obj = WordClass.__super__.setupStateObject.apply(this, arguments);
      obj.subtype = 'wordClass';
      return obj;
    };

    return WordClass;

  })(root.CharacterClass);

  root.WhitespaceClass = (function(_super) {

    __extends(WhitespaceClass, _super);

    function WhitespaceClass(debug, negated) {
      if (negated == null) {
        negated = false;
      }
      WhitespaceClass.__super__.constructor.call(this, debug, negated, [new CharacterRange(0x9, 0xd), "\u0020", "\u00a0", "\u1680", "\u180e", new CharacterRange(0x2000, 0x200a), "\u2028", "\u2029", "\u202f", "\u205f", "\u3000", "\ufeff"]);
    }

    WhitespaceClass.prototype.setupStateObject = function() {
      var obj;
      obj = WhitespaceClass.__super__.setupStateObject.apply(this, arguments);
      obj.subtype = 'whitespaceClass';
      return obj;
    };

    return WhitespaceClass;

  })(root.CharacterClass);

  root.Wildcard = (function(_super) {

    __extends(Wildcard, _super);

    function Wildcard(debug) {
      Wildcard.__super__.constructor.apply(this, arguments);
    }

    Wildcard.prototype.setupStateObject = function() {
      var obj;
      obj = Wildcard.__super__.setupStateObject.apply(this, arguments);
      obj.type = 'wildcard';
      return obj;
    };

    Wildcard.prototype.matches = function(state) {
      var _ref;
      if ((_ref = state.input[state.currentPosition]) !== "\n" && _ref !== "\r" && _ref !== "\u2028" && _ref !== "\u2029" && _ref !== EndGuard) {
        return Result.Success(state.currentPosition + 1);
      } else {
        return Result.Failure();
      }
    };

    return Wildcard;

  })(root.BasicToken);

}).call(this);
