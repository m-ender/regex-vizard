// Generated by CoffeeScript 1.4.0
(function() {
  var root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof global !== "undefined" && global !== null ? global : window;

  root.Disjunction = (function(_super) {

    __extends(Disjunction, _super);

    function Disjunction(debug, token) {
      Disjunction.__super__.constructor.call(this, debug, token);
    }

    Disjunction.prototype.reset = function() {
      Disjunction.__super__.reset.call(this);
      return this.i = 0;
    };

    Disjunction.prototype.nextMatch = function(state, report) {
      var result;
      if (this.i === this.subtokens.length) {
        this.reset();
        return false;
      }
      result = this.subtokens[this.i].nextMatch(state, report);
      if (result !== false) {
        return result;
      } else {
        ++this.i;
        return 0;
      }
    };

    return Disjunction;

  })(root.Token);

}).call(this);
